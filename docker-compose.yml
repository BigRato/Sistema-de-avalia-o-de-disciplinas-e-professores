version: '3.8'

services:
  db_postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - db_volume:/var/lib/postgresql/data 
      - ./scripts:/scripts/
      - ./scripts/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
    networks:
      - db_net

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "16543:80"
    depends_on:
      - db_postgres
        
    networks:
      - db_net

  backend:
    environment:
      FLASK_APP: src/app.py
      FLASK_ENVIRONMENT: development
      FLASK_DEBUG: 1
      POSTGRES_ADDRESS: db_postgres
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      db_postgres:
        condition: service_healthy
    build: ./backend
    ports: 
      - "5000:5000"
    networks:
      - db_net
    volumes:
      - ./backend:/app

networks:
  db_net:

volumes:
  db_volume: